{"ast":null,"code":"class MainApi {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._url = url;\n    this._headers = headers;\n    this._jwt = localStorage.getItem('jwt');\n  }\n\n  _isResOk(res) {\n    console.log(res.ok);\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  register(_ref2) {\n    let {\n      email,\n      password,\n      name\n    } = _ref2;\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      })\n    }).then(this._isResOk);\n  }\n\n  authorize(email, password) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._isResOk);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${this._jwt}`\n      }\n    }).then(this._isResOk);\n  }\n\n  patchUserInfo(email, name) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${this._jwt}`\n      },\n      body: JSON.stringify({\n        email,\n        name\n      })\n    }).then(this._isResOk);\n  }\n\n  addMovie(data) {\n    const {\n      duration,\n      country,\n      director,\n      year,\n      description,\n      trailerLink,\n      nameRU,\n      nameEN,\n      id\n    } = data;\n\n    const imageUrl = () => {\n      return `https://api.nomoreparties.co${data.image.url}`;\n    };\n\n    const thumbnailUrl = () => {\n      return `https://api.nomoreparties.co${data.image.formats.thumbnail.url}`;\n    };\n\n    return fetch(`${this._url}/movies/`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${this._jwt}`\n      },\n      body: JSON.stringify({\n        movieId: id,\n        duration,\n        country,\n        director,\n        trailerLink,\n        year,\n        description,\n        thumbnail: thumbnailUrl(),\n        image: imageUrl(),\n        nameRU,\n        nameEN\n      })\n    }).then(this._isResOk);\n  }\n\n  getSavedMovies() {\n    return fetch(`${this._url}/movies/`, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${this._jwt}`\n      }\n    }).then(this._isResOk);\n  }\n\n  deleteMovie(id) {\n    return fetch(`${this._url}/movies/${id}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${this._jwt}`\n      }\n    }).then(this._isResOk);\n  }\n\n}\n\nconst mainApi = new MainApi({\n  url: \"http://localhost:3000\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default mainApi;","map":{"version":3,"names":["MainApi","constructor","url","headers","_url","_headers","_jwt","localStorage","getItem","_isResOk","res","console","log","ok","json","Promise","reject","status","register","email","password","name","fetch","method","body","JSON","stringify","then","authorize","getUserInfo","Accept","Authorization","patchUserInfo","authorization","addMovie","data","duration","country","director","year","description","trailerLink","nameRU","nameEN","id","imageUrl","image","thumbnailUrl","formats","thumbnail","movieId","getSavedMovies","deleteMovie","mainApi"],"sources":["D:/projects/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["\r\nclass MainApi {\r\n    constructor({ url, headers }) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n        this._jwt = localStorage.getItem('jwt');\r\n    }\r\n\r\n    _isResOk(res) {\r\n        console.log(res.ok);\r\n        return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n\r\n    register({ email, password, name }) {\r\n        return fetch(`${this._url}/signup`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({ email, password, name }),\r\n        })\r\n            .then(this._isResOk)\r\n    }\r\n\r\n    authorize(email, password) {\r\n        return fetch(`${this._url}/signin`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({ email, password })\r\n        })\r\n            .then(this._isResOk)\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._url}/users/me`, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this._jwt}`,\r\n            }\r\n        })\r\n            .then(this._isResOk)\r\n    }\r\n\r\n    patchUserInfo(email, name) {\r\n        return fetch(`${this._url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                authorization: `Bearer ${this._jwt}`,\r\n            },\r\n            body: JSON.stringify({ email, name })\r\n        })\r\n            .then(this._isResOk)\r\n    }\r\n\r\n    addMovie(data) {\r\n        const {\r\n            duration,\r\n            country,\r\n            director,\r\n            year,\r\n            description,\r\n            trailerLink,\r\n            nameRU,\r\n            nameEN,\r\n            id\r\n        } = data;\r\n\r\n        const imageUrl = () => {\r\n            return `https://api.nomoreparties.co${data.image.url}`\r\n        }\r\n        const thumbnailUrl = () => {\r\n            return `https://api.nomoreparties.co${data.image.formats.thumbnail.url}`\r\n        }\r\n\r\n        return fetch(`${this._url}/movies/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                authorization: `Bearer ${this._jwt}`,\r\n            },\r\n            body: JSON.stringify({\r\n                movieId: id,\r\n                duration,\r\n                country,\r\n                director,\r\n                trailerLink,\r\n                year,\r\n                description,\r\n                thumbnail: thumbnailUrl(),\r\n                image: imageUrl(),\r\n                nameRU,\r\n                nameEN,\r\n            })\r\n        }).then(this._isResOk);\r\n    }\r\n\r\n    getSavedMovies() {\r\n        return fetch(`${this._url}/movies/`,{\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                authorization: `Bearer ${this._jwt}`,\r\n            }\r\n        })\r\n            .then(this._isResOk)\r\n    }\r\n\r\n    deleteMovie(id) {\r\n        return fetch(`${this._url}/movies/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                authorization: `Bearer ${this._jwt}`,\r\n            }\r\n        })\r\n            .then(this._isResOk)\r\n    }\r\n}\r\n\r\nconst mainApi = new MainApi({\r\n    url: \"http://localhost:3000\",\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n});\r\n\r\nexport default mainApi;"],"mappings":"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"},"metadata":{},"sourceType":"module"}