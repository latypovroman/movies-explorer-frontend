{"ast":null,"code":"class MainApi {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _isResOk(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  register(_ref2) {\n    let {\n      email,\n      password,\n      name\n    } = _ref2;\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      })\n    }).then(this._isResOk);\n  }\n\n  authorize(email, password) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._isResOk);\n  }\n\n  getUserInfo(jwt) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      }\n    }).then(this._isResOk);\n  }\n\n  addMovie(data) {\n    const {\n      duration,\n      nameRU,\n      nameEN,\n      id\n    } = data;\n\n    const imageUrl = data => {\n      return `https://api.nomoreparties.co${data.image.url}`;\n    };\n\n    return fetch(`${this._url}/movies/`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        movieId: id,\n        duration,\n        image: imageUrl(data),\n        nameRU,\n        nameEN\n      })\n    }).then(this._isResOk);\n  }\n\n}\n\nconst mainApi = new MainApi({\n  url: \"https://api.movies.app.nomoredomains.xyz\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default mainApi;","map":{"version":3,"names":["MainApi","constructor","url","headers","_url","_headers","_isResOk","res","ok","json","Promise","reject","status","register","email","password","name","fetch","method","body","JSON","stringify","then","authorize","getUserInfo","jwt","Accept","Authorization","addMovie","data","duration","nameRU","nameEN","id","imageUrl","image","movieId","mainApi"],"sources":["D:/projects/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["class MainApi {\r\n    constructor({ url, headers }) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _isResOk(res) {\r\n        return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n\r\n    register({ email, password, name }) {\r\n        return fetch(`${this._url}/signup`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({ email, password, name }),\r\n        }).then(this._isResOk)\r\n    }\r\n\r\n    authorize(email, password) {\r\n        return fetch(`${this._url}/signin`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({ email, password })\r\n        })\r\n            .then(this._isResOk)\r\n    }\r\n\r\n    getUserInfo(jwt) {\r\n        return fetch(`${this._url}/users/me`, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${jwt}`,\r\n            }\r\n        })\r\n            .then(this._isResOk)\r\n    }\r\n\r\n    addMovie(data) {\r\n        const {\r\n            duration,\r\n            nameRU,\r\n            nameEN,\r\n            id\r\n        } = data;\r\n\r\n        const imageUrl = (data) => {\r\n            return `https://api.nomoreparties.co${data.image.url}`\r\n        }\r\n\r\n        return fetch(`${this._url}/movies/`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                movieId: id,\r\n                duration,\r\n                image: imageUrl(data),\r\n                nameRU,\r\n                nameEN,\r\n            })\r\n        }).then(this._isResOk);\r\n    }\r\n}\r\n\r\nconst mainApi = new MainApi({\r\n    url: \"https://api.movies.app.nomoredomains.xyz\",\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n});\r\n\r\nexport default mainApi;"],"mappings":"AAAA,MAAMA,OAAN,CAAc;EACVC,WAAW,OAAmB;IAAA,IAAlB;MAAEC,GAAF;MAAOC;IAAP,CAAkB;IAC1B,KAAKC,IAAL,GAAYF,GAAZ;IACA,KAAKG,QAAL,GAAgBF,OAAhB;EACH;;EAEDG,QAAQ,CAACC,GAAD,EAAM;IACV,OAAOA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAA7B;EACH;;EAEDC,QAAQ,QAA4B;IAAA,IAA3B;MAAEC,KAAF;MAASC,QAAT;MAAmBC;IAAnB,CAA2B;IAChC,OAAOC,KAAK,CAAE,GAAE,KAAKb,IAAK,SAAd,EAAwB;MAChCc,MAAM,EAAE,MADwB;MAEhCf,OAAO,EAAE,KAAKE,QAFkB;MAGhCc,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEP,KAAF;QAASC,QAAT;QAAmBC;MAAnB,CAAf;IAH0B,CAAxB,CAAL,CAIJM,IAJI,CAIC,KAAKhB,QAJN,CAAP;EAKH;;EAEDiB,SAAS,CAACT,KAAD,EAAQC,QAAR,EAAkB;IACvB,OAAOE,KAAK,CAAE,GAAE,KAAKb,IAAK,SAAd,EAAwB;MAChCc,MAAM,EAAE,MADwB;MAEhCf,OAAO,EAAE,KAAKE,QAFkB;MAGhCc,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEP,KAAF;QAASC;MAAT,CAAf;IAH0B,CAAxB,CAAL,CAKFO,IALE,CAKG,KAAKhB,QALR,CAAP;EAMH;;EAEDkB,WAAW,CAACC,GAAD,EAAM;IACb,OAAOR,KAAK,CAAE,GAAE,KAAKb,IAAK,WAAd,EAA0B;MAClCc,MAAM,EAAE,KAD0B;MAElCf,OAAO,EAAE;QACLuB,MAAM,EAAE,kBADH;QAEL,gBAAgB,kBAFX;QAGLC,aAAa,EAAG,UAASF,GAAI;MAHxB;IAFyB,CAA1B,CAAL,CAQFH,IARE,CAQG,KAAKhB,QARR,CAAP;EASH;;EAEDsB,QAAQ,CAACC,IAAD,EAAO;IACX,MAAM;MACFC,QADE;MAEFC,MAFE;MAGFC,MAHE;MAIFC;IAJE,IAKFJ,IALJ;;IAOA,MAAMK,QAAQ,GAAIL,IAAD,IAAU;MACvB,OAAQ,+BAA8BA,IAAI,CAACM,KAAL,CAAWjC,GAAI,EAArD;IACH,CAFD;;IAIA,OAAOe,KAAK,CAAE,GAAE,KAAKb,IAAK,UAAd,EAAyB;MACjCc,MAAM,EAAE,MADyB;MAEjCf,OAAO,EAAE,KAAKE,QAFmB;MAGjCc,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBe,OAAO,EAAEH,EADQ;QAEjBH,QAFiB;QAGjBK,KAAK,EAAED,QAAQ,CAACL,IAAD,CAHE;QAIjBE,MAJiB;QAKjBC;MALiB,CAAf;IAH2B,CAAzB,CAAL,CAUJV,IAVI,CAUC,KAAKhB,QAVN,CAAP;EAWH;;AA9DS;;AAiEd,MAAM+B,OAAO,GAAG,IAAIrC,OAAJ,CAAY;EACxBE,GAAG,EAAE,0CADmB;EAExBC,OAAO,EAAE;IACLuB,MAAM,EAAE,kBADH;IAEL,gBAAgB;EAFX;AAFe,CAAZ,CAAhB;AAQA,eAAeW,OAAf"},"metadata":{},"sourceType":"module"}